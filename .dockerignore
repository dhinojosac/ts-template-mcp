# Dependencies
# Exclude node_modules to avoid copying large dependency tree
# Dependencies will be installed fresh in the container
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
# Exclude build artifacts as they will be generated in the container
dist
build
.next
.nuxt
.vuepress/dist

# Environment files
# Exclude environment files to prevent secrets from being baked into the image
# Environment variables should be passed at runtime or through Docker secrets
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE and editor files
.vscode
.idea
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Git
.git
.gitignore

# Docker
# Exclude Docker files to prevent recursive copying
# These files are not needed inside the container
Dockerfile
.dockerignore
docker-compose.yml

# Documentation
README.md
*.md

# Test files
coverage
.nyc_output
*.test.js
*.test.ts
*.spec.js
*.spec.ts

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# TypeScript cache
*.tsbuildinfo

# Optional stylelint cache
.stylelintcache 